
--------------- Source Node '1/10' ---------------
Node ID: '82844bd2-7ad9-434d-92e6-2715691963c1'
Rerank Score: '0.5587639212608337'
Metadata String:
`page_label: 3
file_name: High resolution measurement.pdf
retrieval_score: 0.3457248799515274`
Metadata Size: `92`
Content Size: `2434`
Retrieved Text:
method and explore the possibility of aligning longer
reads with increased specificity. The specificity would
allow for the quantification of individual domains and
DUF1220 sequences within genes.
In this study, we explore how these strategies and
various sequencing parameters affect the accuracy and
precision of copy number estimation and demonstrate
a method in which copies of DUF1220 and DUF1220
encoding genes can be accurately estimated. We valid-
ate this method with simulations, ddPCR, and apply it
to data from the 1000 Genomes Project. We demon-
strate not only the accurate estimation of DUF1220-
clade specific copies, but also the delineation of clades,
and in some cases domains, within individual NBPF genes.
Such information allows one to determine if variations are
due to changes in the copy number of whole genes or in-
tragenic domain copy number expansions or contractions
within specific individual NBPF genes. Together these ad-
vances allow us to utilize whole genome sequence data toidentify copy number changes in DUF1220 sequences
with unprecedented accuracy and precision, allowing po-
tential disease associations to be examined at the highest
level of resolution so far reported.
Results
Characterizing the read alignment ambiguity between
DUF1220 domains
Because some of the ~300 DUF1220 copies in the haploid
human genome display high sequence similarity to one an-
o t h e r[ 1 0 ] ,i ti sl i k e l yt h a ts o m es e q u e n c er e a d sw i l lm a p
equally well to multiple locat ions. To further understand
the relationship and sequence conservation between each
of the 24 NBPF genes and respective domains or subtypes,
we performed a detailed annotation of the NBPF genes in
the most recent version of the human genome (hg38). We
then used the sequences to carry out a detailed sequence
analysis and clustering (Fig. 1). We have included the 8 pre-
dicted NBPF pseudogenes (as annotated in hg38) in our
Fig. 1 DUF1220 domains cluster by sequence similarity into six major clades. A Neighbor-Joining tree of DUF1220 domain protein sequences was
constructed with Geneious v. 10.0.5. Branch colors represent the clade that each DUF1220 domain has been assigned to. DUF1220 domains for
which the sequence is a hybrid of two major clades are in black. The aligned sequence data supporting the clade assignments can be found in
Additional file 6Astling et al. BMC Genomics  (2017) 18:614 Page 3 of 16


--------------- Source Node '2/10' ---------------
Node ID: 'e03f4ce7-850f-4bab-a706-be174699e2a0'
Rerank Score: '0.533080518245697'
Metadata String:
`page_label: 14
file_name: High resolution measurement.pdf
retrieval_score: 0.31230311537815814`
Metadata Size: `94`
Content Size: `3489`
Retrieved Text:
Assignment of DUF1220 domains to appropriate clade
As previously described, the majority of DUF1220 do-
mains can be divided into 6 clades [10]. The domains of
each clade can be distinguished by their position within
the gene, their exon lengths (Additional file 5), and pro-
tein sequence motifs unique to each clade (Additional file
6). We assigned each DUF1220 domain to a clade based
on the presence or absence of these characteristic protein
sequence motifs. The validity of our clade assignments
can be confirmed by viewing a phylogenetic tree of the
protein sequences (Fig. 1). Furthermore, because the
amino-acid motifs particular to each clade are highly
conserved within clades, it is easy to view the distinctions
between clades by viewing the aligned protein sequences
(Additional file 6).
Some (16/302) DUF1220 domains do not fit well
within the previously established clades, but clearly
form 5 distinct clusters based on sequence similarity.
We have therefore established five new clades referred
to as CON4 –8 (Additional file 5). In contrast to the
domains belonging to the six clades described above,
the majority of these DUF1220 domains are located be-
tween 1p11.2 and 1p13.3. These were not analyzed in
this study because of their non-canonical nature and
their locations predominately within non- NBPF genes.
A few (6/302) DUF1220 domains appear to be hybrid
domains, that is, they contain a short exon characteris-
tic of one domain and the long exon characteristic of a
different domain. These domains were not included in
our analysis.
Individual DUF1220 domains are referred to by their
gene name, the name of the clade to which the domain
belongs, and a number reflecting the placement of that
domain within the gene. For example, NBPF1_CON1_3
refers to the third CON1 domain within NBPF1 and
NBPF20_HLS1_8 refers to the eighth HLS1 domain
within NBPF20 . Six DUF1220 containing genes currently
lack formal gene names in either RefSeq or Ensembl but
each of these has high sequence similarity to another
gene (e.g. LOC102724250 is very similar to NBPF1 ). For
clarity, in Additional file 5 and Additional file 2: Figure S1,
we refer to these genes by descriptive names reflecting
their similarity to named genes (LOC102724250: NBPF1L,
LOC100996724: PDE4DIPL1 , RP11-744H18.1: PDE4-
DIPL2 ). The three genes containing CON8 domains are
similar to one another but not to any currently named
gene, so they are referred to as CON8 containing 1, 2, and
3 (LOC105369199: CON8C1, LOC105369140: CON8C2 ,
LINC00869: CON8C3 ). In Additional file 5 we also label
some exons as conserved exon 1 –7 (CE1-CE7) because
the sequence of these exons is highly conserved across
genes and, for CE1-CE3, at multiple locations within
genes. Several non-coding exons also have high sequence
similarity across genes and these are labeled UTR1-UTR20 (e.g. the sequence of UTR13 exons is highly con-
served across different genes). Exons that do not meet any
of the conditions described above are referred to as “exon ”
with a number denoting the exon position in the gene.
Measurement of DUF1220 by digital droplet PCR (ddPCR)
We performed ddPCR essentially as previously described
[17] to validate our copy number estimates for three rep-
resentative DUF1220 clades. DNA samples were obtained
from Coriell Biorepository and digested with the restric-
tion enzyme DDE1. Digested DNA, primers, and fluores-
cently labeled probes were then combined following the
manufacturer ’s protocol.


--------------- Source Node '3/10' ---------------
Node ID: '255afe64-ed31-4e96-b80c-cc84ee430e58'
Rerank Score: '0.5290367603302002'
Metadata String:
`file_path: code/1000genomes/run.sh
file_name: run.sh
url: https://github.com/dpastling/plethora/blob/master/code/1000genomes/run.sh
retrieval_score: 0.26669808118229277`
Metadata Size: `168`
Content Size: `497`
Retrieved Text:
#!/usr/bin/env bash
#BSUB -J run
#BSUB -o logs/run_%J.out
#BSUB -e logs/run_%J.err

bsub < code/1000genomes/1_download.sh
bsub -w "done(download[*])" < code/1000genomes/2_trim.sh
bsub -w "done(trim[*])" < code/1000genomes/3_batch_bowtie.sh
bsub -w "done(align[*])" < code/1000genomes/4_batch_clean.sh
bsub -w "done(clean[*])" < code/1000genomes/5_batch_make_bed.sh
bsub -w "done(coverage[*])" < code/1000genomes/6_batch_clean.sh
bsub -w "done(clean[*])" < code/1000genomes/7_batch_gc_correction.sh


--------------- Source Node '4/10' ---------------
Node ID: 'ef9add8f-656b-4b66-88a9-4f7fa31a2919'
Rerank Score: '0.5248075723648071'
Metadata String:
`page_label: 12
file_name: High resolution measurement.pdf
retrieval_score: 0.31117701690131544`
Metadata Size: `94`
Content Size: `4031`
Retrieved Text:
Methods
Simulation studies
To assess the degree of read alignment ambiguity between
DUF1220 domains, a ‘spike-in ’study was conducted,
where reads from an individual domain were simulated
and aligned back to the genome. Single and paired-reads,
ranging in lengths from 36 bp to 300 bp, were randomly
sampled from the reference genome (hg38). To simulate
duplication or deletion events, the number of reads were
varied to simulate one to ten copies of each DUF1220 do-
main. To obtain reads for a single domain, reads overlap-
ping a DUF1220 domain of interest were isolated and
aligned back to the genome using each of the alignment
strategies below. Afterwards we compared the degree to
which reads aligned to the expected location.
To assess the ability of each algorithm to account for all
271 haploid DUF1220 copies, a ‘baseline ’study was con-
ducted where all canonical DUF1220 domains were simu-
lated at diploid coverage and aligned back to the genome.
Reads were simulated as described for the ‘spike-in ’study
but with 100 bp paired-end reads. 100 bp paired-end reads
were chosen because this is the sequencing length and
type available from the 1000 Genomes Project.
For both simulation studies, the number of reads was
adjusted to give a baseline diploid coverage of 30×. For
paired-end reads the insert size was varied to match the
variation found in the 1000 Genomes Project, normally
distributed with a mean insert size of 350 bp and a
standard deviation of 50 bp.
Sequencing errors and quality scores could potentially
increase the ambiguity of each read and impact the
ability to distinguish between DUF1220 domains. Qual-
ity scores from Illumina sequence data tend to decrease
towards the end of each read. To model this, we mea-
sured the mean quality score at each base for the 1000
Genomes fastq files and used loess regression to model
the distribution. The profile was extended so that each
simulated read length would have the same quality score
profile. This was done to simulate the quality score drop
off rate relative to read length observed in data obtained
from different generations of Illumina sequencers (GAIIx,
HiSeq2000, MiSeq, etc). Each sequencing pair was
modeled separately, since the second read tends to have
lower quality scores than the first. Sequencing errors were
modeled as described in [30]. The mean probability for a
sequencing error for the first read was 0.0026 and 0.004
for the second pair. The error rate was increased linearly
such that the probability of a sequencing error was 1.5
times more likely at the end of the read and 1/2 as likely
at the beginning of the read.
For alignment to the human genome reference, we
tested various alignment strategies. Bowtie2 (version 2.2.9)
[31] was used to find the ‘best ’alignment for each read,
with the ‘–very-sensitive ’preset and a max-insert size of800 bp. For the ‘All Align ’strategy, mrsFast-Ultra (version
3.3.11) [24] was used as described in [25], with the param-
eters ‘–crop 36 ’and ‘-e 2 ’to crop 100 bp reads to 36 bp
and aligned with up to two mismatches. As an alternative,
Bowtie (version 1.1.2) [32] was also used for the ‘All Align ’
strategy, with the following parameters ‘–all -v 2 -X 800 ’.
For the multiread strategy, reads were aligned to the gen-
ome using Bowtie v1.1.2 with the ‘–best –strata –all–v2’
parameters. In this case, Bowtie attempts to find the best
possible alignment for each read. If multiple valid align-
ments are found, rather than choosing one at random, all
ties are returned. Later the contribution of each read can
be weighted as described below.
After alignment, the BAM files were converted to BED
format using bedtools (v2.17.0) [33]. Paired-end reads
aligned as a proper pair were jo ined into a single fragment
and discordant pairs were treated as single-end reads. The
lengths of the discordant reads were extended to half mean
insert size for that sample following a normal distribution.
The resulting fragments were then intersected with each
DUF1220 domain using bedtools.


--------------- Source Node '5/10' ---------------
Node ID: 'da94c578-4d73-4f88-8f5e-527698159e71'
Rerank Score: '0.5202416181564331'
Metadata String:
`page_label: 11
file_name: High resolution measurement.pdf
retrieval_score: 0.3520699820736401`
Metadata Size: `93`
Content Size: `1232`
Retrieved Text:
The ability to
measure gene-specific clade groups allows researchers to
test hypotheses related to the effects of DUF1220 changes
in specific NBPF genes, which may reveal important
disease associations not previously open to investigation.
Because we can also determine gene copy number
independently of DUF1220 domain number, this method
allows the researcher to discriminate between CNVs
involving gene duplication/deletion events and changes
involving duplications/deletions of exons within a gene.
Since DUF1220 domains show the greatest human
lineage-specific copy number increase of any coding re-
gion of the genome, the strategies employed here and the
insights we obtained should serve to guide other efforts to
use read depth to measure copy number of highly dupli-
cated sequences. The result of the work presented here is
a greatly enhanced capability to analyze the role that these
sequences play in human variation and disease. This
method can find additional applications in high-resolution
analysis of other multi-copy gene families and of genes
containing multiple duplicated domains, though this was
outside of the immediate scope of the work presented here.Astling et al. BMC Genomics  (2017) 18:614 Page 11 of 16


--------------- Source Node '6/10' ---------------
Node ID: 'd2ca9a90-4cad-4f13-8280-0417e35dd9c1'
Rerank Score: '0.5184752941131592'
Metadata String:
`file_path: README.md
file_name: README.md
url: https://github.com/dpastling/plethora/blob/master/README.md
retrieval_score: 0.31398709539383624`
Metadata Size: `143`
Content Size: `3660`
Retrieved Text:
#### 4. (Optional) Remove temporary files

```bash
bsub < code/1000genomes/4_batch_clean.sh
```

This script removes intermediate files from earlier stages of the pipeline. This is useful because WGS files can take up a lot of disk space. This script first confirms that files from previous steps have been run correctly before removing them. 

By default it assumes that the number of reads in the fastq file are
correct (verified via checksum or read counting). Optionally you can provide a
file with the expected number of reads. The script deletes the file from a
prior step if the file in the next step has the correct number of reads (e.g.
delete the original bam file if the sorted bam has the correct number of
reads and delete the sorted bam if the resulting bed file has the correct number
of reads).

If the data have been downloaded from a public repository like the 1000 Genomes, this script can remove the fastq files by passing an optional flag.

The script assumes the `.bam` file contains unaligned reads (e.g. the number of reads in the fastq file should match the number of reads in the .bam file).

Behind the scenes the clean script runs `code/clean_files.pl`. For more information on how to run this directly:

```bash
code/clean_files.pl -h
```


#### 5. Calculate coverage for each region of interest

```bash
bsub < code/1000genomes/5_make_bed.sh
```

This script: 

  - Coverts the .bam alignment file into bed format
  - Parses the reads
  - Calls the `merge_pairs.pl` script (described below) to combined proper pairs into a single
fragment
  - Finds overlaps with the reference bed file containing the regions of interest
(e.g. DUF1220)
  - Calculates the average coverage for each region: (number of bases that
overlap) / (domain length)


#### 6. (Optional) Remove temporary files

```bash
bsub < code/1000genomes/6_batch_clean.sh
```

This script is a link to the script above. At this stage it can remove the alignment and fastq files if present.


#### 7. Correct coverage for GC bias

```bash
bsub < code/1000genomes/7_batch_gc_correction.sh
```

This script performs the GC correction step using conserved regions that are
assumed to be found in diploid copy number. This script requires the `_read.depth.bed` file 
generated in step 5 above as well as a file with the percent GC content for each domain.

Behind the scenes, this shell script calls `code/gc_correction.R` which can be run manually like so:

```bash
code/gc_correction.R results/HG00250_read.depth.bed data/hg38_duf_full_domains_v2.3_GC.txt
```

## Other useful scripts

#### preprocessing\_1000genomes.R

This script is how we selected the ~300 samples from the full `sample.index`
file for the 1000 Genomes Project. It filters out the exome sequencing data,
selects samples with reasonably high coverage, etc. It tries to collect
representative samples from each of the populations.


#### gc\_from\_fasta.pl

This script calculates the percent GC content for a set of domains and is called
by the batch script above. Required are a set of domains in .bed file format and
a .fasta file for the genome reference


#### build\_gc\_model.sh

This an LSF script for submitting a specific version of the DUF1220 annotation
to the LSF queue.


#### merge\_pairs.pl

This is a helper script to `make_bed.sh` that combines proper pairs into a
single fragment, and separates discordant pairs into single end reads. The
lengths of the single end reads are extended by half the mean fragment size,
which is determined from the data itself. The extended length is sampled from a
normal distribution using the mean and standard deviation of the measured fragment sizes.


--------------- Source Node '7/10' ---------------
Node ID: '6133eff2-62a0-42de-8870-68b4da7512ce'
Rerank Score: '0.5016749501228333'
Metadata String:
`file_path: README.md
file_name: README.md
url: https://github.com/dpastling/plethora/blob/master/README.md
retrieval_score: 0.3166578346829356`
Metadata Size: `142`
Content Size: `3064`
Retrieved Text:
## Processing sequence data from the 1000 Genomes Project

The following describes how to apply plethora to the 1000 Genomes data and
describes the main steps in a little more detail. The scripts for processing the
1000 Genomes data can be found in the folder `code/1000genomes`. These scripts
are for submitting jobs to the LSF job queuing system for processing multiple
samples in parallel. These scripts can be modified for use with 
other job queuing systems (such as PBS or Slurm). Alternatively, the scripts in the main `code` folder
can be run individually without using a job scheduler (as shown in the quick
start guide).

If everything has been configured correctly, you should be able to process the
entire dataset with the following command:

    bsub < code/1000genomes/run.sh

However, it is likely that some jobs will fail at various stages of the pipeline due to
networking issues or from heavy usage from other users of the computational cluster. 
So you may have to submit some of these steps to the queue separately.


#### 0. Edit the `config.sh` file to adapt the paths and sample list for your environment

The config file is where all the project specific parameters and sample names
should go. The other scripts in the pipeline should be kept as abstract as possible for reuse. 

Here are few important variables required by the pipeline:

- **sample_index** path to the file with the 1000 Genomes information
- **genome** path to the Bowtie indices for genome
- **master_ref** path to the bedfile with the DUF1220 coordinates, or other
  regions of interest
- **alignment_dir** path to where the Bowtie2 alignments will go
- **result_folder** path to where the resulting coverage files will be stored
- **bowtie_params** additional parameters to be passed to Bowtie2 that are
  specific to the project

The config file will also create directories where all the results will go.


#### 1. Download the fastq files from the 1000 Genomes Project

```bash
bsub < code/1000genomes/1_download.sh
```

This script downloads the fastq files for each sample from the 1000
Genomes site as specified in a sample\_index file. The script fetches all associated files with a given sample name and uses `wget` to download the files to the `fastq` folder. The script checks the md5sum hashes for each file against the
downloaded file. The script exits with an error if they do not match.

Alternatively, if you are not using the LSF queuing system, the script can be run manually like so:

```bash
code/download_fastq.pl HG00250 data/1000Genomes_samples.txt 
```


#### 2.  Trim and filter the reads

```bash
bsub < code/1000genomes/2_trim.sh
```

This script automates the read trimming by Cutadapt. Alternatively, Cutadapt
could be run directly as described in the quick start guide above.


#### 3. Align reads to the genome

```bash
bsub < code/1000genomes/3_batch_bowtie.sh
```

This script automates the Bowtie2 alignments for the filtered reads generated above.

Alternatively, Bowtie2 can be run separately using the shell script `code/bowtie.sh`


--------------- Source Node '8/10' ---------------
Node ID: 'a3daa706-dd5a-4922-aeb8-8aac30b02aba'
Rerank Score: '0.4898831248283386'
Metadata String:
`page_label: 4
file_name: High resolution measurement.pdf
retrieval_score: 0.34708813742629563`
Metadata Size: `93`
Content Size: `4078`
Retrieved Text:
analysis as their domains may have impacts not related
to their coding potential (e.g. substrates for homolo-
gous recombination, targets of DNA or RNA binding
proteins). Application of the method described in this
paper to future analysis of variation and disease associ-
ations allows one to measure the DUF1220 domains of
pseudogenes separately from those that are predicted to
be protein-encoding.
To develop our methodology for measuring DUF1220
copies, we wanted to determine the extent to which this
read alignment ambiguity occurs. We carried out a
simulation in which 100 bp paired-end reads from each
DUF1220 domain were generated from the human ref-
erence genome, hg38, and aligned back to the reference
to determine the extent to which reads from each do-
main (CON1, CON2, CON3, HLS1, HLS2, and HLS3)
selectively align to the correct gene and clade. We
found that, with 100 bp paired-end reads, the DUF1220
sequences from eight genes can be uniquely measured;
100% of the reads originating from them align to the
originating gene and clade (e.g. NBPF7 ) (Fig. 2). In
other cases, a proportion of the reads align equally well
to two or more genes that have high sequence similarity
(e.g. NBPF4, NBPF5P & NBPF6) (Fig. 2). Simulations
involving 300 and 600 bp paired-end reads could not
resolve the domains within NBPF4 ,NBPF5P ,a n d
NBPF6 . If not accounted for, this read alignment ambi-
guity would result in over- o r under- estimates of gene-
specific clade copy number.
To address the challenge of read alignment ambiguity,
we observed from our simulation that show read sharing
is restricted to small clusters of genes and not distrib-
uted across all genes. By grouping related genes together
for analysis, one can maintain accuracy and improve our
resolution of copies within a clade. For example, we cal-
culate the number of CON1 domains from NBPF4,
NBPF5, and NBPF6 together because they share a high
percentage of their reads. Likewise, domains from
NBPF10, NBPF14, NBPF19, and NBPF20 share align-
ment ambiguity, so copies for these genes can be aggre-
gated. As described below, this approach substantially
reduces the error in copy number measurement. Add-
itional file 1: Table S1 shows a strategy for grouping re-
lated genes into 60 categories based on the results from
the simulated data for 100 bp paired end reads (Fig. 2).
While grouping genes with high read sharing reduces
resolution, the level of resolution obtainable with 100 bp
paired-end reads is still an improvement over existing
methods. The most appropriate gene groups to use for
any given analysis will depend on the goals of the re-
searcher (e.g. whether accuracy or resolution is a priority)
and the sequence data available, as longer paired-end
reads should improve the ability to localize reads to the
correct gene (and vice versa for shorter sequencing reads).Establishment of four levels of DUF1220 measurement
Based on the read alignment ambiguity shown in Fig. 2,
we differentiated four levels of resolution at which
DUF1220 copy number can be measured; 1) Domain level
measures are of each individual DUF1220 domain, i.e.
alignment to a precise genomic location, 2) Gene-specific
clade level measures are of all domains from a particular
clade that occur within each DUF1220-encoding gene, i.e.
reads align to a particular clade within an NBPF gene
(Additional file 1: Table S1) 3) Group-specific measures
are of all domains from a particular clade that occur
within gene grouping as described above (Additional file
1: Table S1), 4) Clade-specific measures are all DUF1220
domains belonging to each of the 6 different DUF1220
clades.
Evaluation of read length and paired-end reads on
quantification of DUF1220 copies
In order to measure DUF1220 copies, we need to deter-
mine which kind of sequencing data would be most ap-
plicable and how sequencing parameters may influence
the accuracy and precision of the measurement. Previ-
ous strategies have relied on very short 36 bp reads, we
hypothesized that longer re ads would improve accuracy
of copy number prediction.


--------------- Source Node '9/10' ---------------
Node ID: '3bef1df5-b8b0-4f1c-882f-7916d4d4c17c'
Rerank Score: '0.48449328541755676'
Metadata String:
`page_label: 4
file_name: High resolution measurement.pdf
retrieval_score: 0.32663408112541115`
Metadata Size: `93`
Content Size: `1652`
Retrieved Text:
To address this, we com-
pared the effect of read length, as well as single and
paired-end reads, on the accuracy of our read depth es-
timate based on simulated data. We simulated reads
from the sequences of each of the DUF1220 domains
based on the human reference genome hg38 and
aligned these back to the genome along with additional
levels of the reads spiked in. The simulated read
lengths were 36, 100, 150 or 300 bp long, both single-
and paired end. For each of the read lengths, we com-
pared the predicted and measured coverage and report
the combined root mean squared error (RMSE) of the
prediction for each of the four different levels of reso-
lution (Fig. 3). Fig. 4 shows the average RMSE for
domains within each gene when 100 bp, paired-end
reads are utilized. A potential limitation of calculating
the RMSE for the spike-in study is that the variances
may not scale linearly for domains where the off-target
alignment rate is high. In some cases we observed that
t h ea b s o l u t ed i f f e r e n c eb e t w e e nt h em e a s u r e da n ds i m -
ulated copy numbers to increase with increasing simu-
lated coverage. By using the relative ratio between
measured and simulated copy numbers the respective
off-target alignments remain the same and are com-
pared consistently throughout the entire simulation ex-
periment (e.g. if for a particular domain, 10% of the
reads align off target, one would measure a copy num-
ber of 0.9 for 1 simulated copy, and a copy number of
4.5 for 5 simulated copies. Both represent an increase
in the absolute difference, but measure 90% of theAstling et al. BMC Genomics  (2017) 18:614 Page 4 of 16


--------------- Source Node '10/10' ---------------
Node ID: 'f98a5b5f-1f05-4a4c-bc78-c90568846fdb'
Rerank Score: '0.48171842098236084'
Metadata String:
`page_label: 10
file_name: High resolution measurement.pdf
retrieval_score: 0.26257463841861445`
Metadata Size: `94`
Content Size: `3734`
Retrieved Text:
reference genome and aligned them back requiring a sin-
gle unique match within one mismatch using Bowtie1,
producing a set of unique regions within and around the
coding portion of each NBPF gene (Additional file 3). To
generate our estimates of gene copy number, we excluded
any regions within the coding portion of the gene to avoid
the possibility of intragenic changes affecting our gene-
level estimate. We also excluded some untranslated exons
(UTR) at the 5 ’and 3 ’ends of genes because our results
indicated that these may reflect copy number changes of
specific upstream or downstream regions that are not due
to gene copy number changes. The average normalized
read depth across these unique regions was calculated to
estimate the gene copy number of each of these genes.
Our gene copy number estimates are largely in agreement
with those previously reported [21], including an ele-
vated mean copy number and high variability for NBPF1
(mean: 3.11 (95% CI: 3.04 –3.18), min: 1.91, max: 4.96) (Fig.
8). Sudmant (2010) reported a copy number range for
NBPF1 of approximately 4 to 15 copies. We found that the
sequence currently annotated as LOC102724250 on an
un-placed contig, chr1_KI270711v1_random, is an NBPF
gene with high similarity to NBPF1 , which we refer to as
NBPF1L in this paper. This may account for one of the
missing copies of NBPF1 previously described [21]. If the
copy number reported for NBPF1 in the Sudmant (2010)paper included both NBPF1 and NBPF1L ,t h e no u r
equivalent range ( NBPF1 plus NBPF1L ) is ~4 to ~11 cop-
ies which is fairly close to the range reported by Sudmant,
2010. By investigating the copy number of unique regions
within and surrounding the coding portion of NBPF1 ,w e
found that some regions upstream of the coding sequence
have copy numbers much greater than the regions closest
to the coding sequence (Additional file 2: Figure S3), sug-
gesting duplication of these regions independently of the
protein-coding portion of the gene. We have excluded
these regions from Fig. 8 where we report the gene copy
numbers. This finding highlights the value of our in-depth
analysis of NBPF and DUF1220.
Comparison to previously published data
To further validate our read-depth method, we compared
our copy number estimates with those published previ-
ously [21] for select multi-copy genes ( NSF,KIAA1267 )
using the same 1000 Genomes Project samples as those in
the comparison study. Values we obtained were highly-
correlated with those previously reported (the Pearson
correlation coefficient was 0.92 for NSF and 0.95 for
KIAA1267). We also found that while our read depth-
predicted distributions of NBPF1 and NBPF7 gene copy
number among 1000 Genomes samples are similar to
those previously reported [21], those we generated for
NBPF14 were not. To address this discrepancy, we
assessed NBPF14 copy number by ddPCR and found that
our read depth and ddPCR estimates were very similar for
most samples tested (Additional file 2: Figure S4), and
were more concordant than the values previously re-
ported. One explanation for the difference in NBPF14
copy number between our study and Sudmant (2010) [21]50100150200250
CON1
CON2
CON3
HLS1
HLS2
HLS3Total Copies
Fig. 7 Genomic clade copy number for the six primary DUF1220
clades in 282 individuals from the 1000 Genomes project. Box plots
of the total copies measured for each clade using the ‘Best Align ’
strategy as described in the text, showing the median ( horizontal
line) and the upper and lower quartiles as the box with whiskers
extending to 1.5 times the interquartile range with outliers shown
as individual points outside this range. The variance shown include
sequencing center bias and differences in populations.

